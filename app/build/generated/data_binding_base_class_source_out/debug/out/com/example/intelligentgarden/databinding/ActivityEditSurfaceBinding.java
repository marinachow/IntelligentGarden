// Generated by view binder compiler. Do not edit!
package com.example.intelligentgarden.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TableLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.intelligentgarden.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditSurfaceBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button applyChangesButton;

  @NonNull
  public final Spinner spinnerCols;

  @NonNull
  public final Spinner spinnerRows;

  @NonNull
  public final TableLayout tableLayout;

  @NonNull
  public final TextView textViewCols;

  @NonNull
  public final TextView textViewRows;

  private ActivityEditSurfaceBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button applyChangesButton, @NonNull Spinner spinnerCols,
      @NonNull Spinner spinnerRows, @NonNull TableLayout tableLayout,
      @NonNull TextView textViewCols, @NonNull TextView textViewRows) {
    this.rootView = rootView;
    this.applyChangesButton = applyChangesButton;
    this.spinnerCols = spinnerCols;
    this.spinnerRows = spinnerRows;
    this.tableLayout = tableLayout;
    this.textViewCols = textViewCols;
    this.textViewRows = textViewRows;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditSurfaceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditSurfaceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_surface, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditSurfaceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.applyChangesButton;
      Button applyChangesButton = ViewBindings.findChildViewById(rootView, id);
      if (applyChangesButton == null) {
        break missingId;
      }

      id = R.id.spinnerCols;
      Spinner spinnerCols = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCols == null) {
        break missingId;
      }

      id = R.id.spinnerRows;
      Spinner spinnerRows = ViewBindings.findChildViewById(rootView, id);
      if (spinnerRows == null) {
        break missingId;
      }

      id = R.id.tableLayout;
      TableLayout tableLayout = ViewBindings.findChildViewById(rootView, id);
      if (tableLayout == null) {
        break missingId;
      }

      id = R.id.textViewCols;
      TextView textViewCols = ViewBindings.findChildViewById(rootView, id);
      if (textViewCols == null) {
        break missingId;
      }

      id = R.id.textViewRows;
      TextView textViewRows = ViewBindings.findChildViewById(rootView, id);
      if (textViewRows == null) {
        break missingId;
      }

      return new ActivityEditSurfaceBinding((ConstraintLayout) rootView, applyChangesButton,
          spinnerCols, spinnerRows, tableLayout, textViewCols, textViewRows);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
